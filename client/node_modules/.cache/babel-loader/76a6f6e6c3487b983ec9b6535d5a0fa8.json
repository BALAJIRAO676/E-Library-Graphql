{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\balu1\\\\Desktop\\\\Projects\\\\graphql-playlist\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\balu1\\\\Desktop\\\\Projects\\\\graphql-playlist\\\\client\\\\src\\\\components\\\\AddBook.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    authors {\\n      name\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { graphql } from \"react-apollo\";\nconst getAuthorsQuery = gql(_templateObject());\n\nclass AddBook extends Component {\n  displayAuthors() {\n    var data = this.props.data;\n\n    if (data.loading) {\n      return React.createElement(\"option\", {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Loading Authors..\");\n    } else {\n      return data.authors.map(author => {\n        return React.createElement(\"option\", {\n          key: author.id,\n          value: author.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, author.name);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      id: \"add-book\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Book Name: \"), React.createElement(\"input\", {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Genre: \"), React.createElement(\"input\", {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Author: \"), React.createElement(\"select\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Select Author \"), this.displayAuthors())), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"+\"));\n  }\n\n}\n\nexport default graphql(getAuthorsQuery)(AddBook);","map":{"version":3,"sources":["C:\\Users\\balu1\\Desktop\\Projects\\graphql-playlist\\client\\src\\components\\AddBook.js"],"names":["React","Component","gql","graphql","getAuthorsQuery","AddBook","displayAuthors","data","props","loading","authors","map","author","id","name","render"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,MAAMC,eAAe,GAAGF,GAAH,mBAArB;;AASA,MAAMG,OAAN,SAAsBJ,SAAtB,CAAgC;AAC9BK,EAAAA,cAAc,GAAG;AACf,QAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;;AACA,QAAIA,IAAI,CAACE,OAAT,EAAkB;AAChB,aAAO;AAAQ,QAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD,KAFD,MAEO;AACL,aAAOF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,MAAM,IAAI;AAChC,eACE;AAAQ,UAAA,GAAG,EAAEA,MAAM,CAACC,EAApB;AAAwB,UAAA,KAAK,EAAED,MAAM,CAACC,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,MAAM,CAACE,IADV,CADF;AAKD,OANM,CAAP;AAOD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CANF,EAWE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEG,KAAKT,cAAL,EAFH,CAFF,CAXF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAlBF,CADF;AAsBD;;AAvC6B;;AA0ChC,eAAeH,OAAO,CAACC,eAAD,CAAP,CAAyBC,OAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { graphql } from \"react-apollo\";\r\n\r\nconst getAuthorsQuery = gql`\r\n  {\r\n    authors {\r\n      name\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass AddBook extends Component {\r\n  displayAuthors() {\r\n    var data = this.props.data;\r\n    if (data.loading) {\r\n      return <option disabled>Loading Authors..</option>;\r\n    } else {\r\n      return data.authors.map(author => {\r\n        return (\r\n          <option key={author.id} value={author.id}>\r\n            {author.name}\r\n          </option>\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"add-book\">\r\n        <div className=\"field\">\r\n          <label>Book Name: </label>\r\n          <input type=\"text\" />\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <label>Genre: </label>\r\n          <input type=\"text\" />\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <label>Author: </label>\r\n          <select>\r\n            <option>Select Author </option>\r\n            {this.displayAuthors()}\r\n          </select>\r\n        </div>\r\n        <button>+</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default graphql(getAuthorsQuery)(AddBook);\r\n"]},"metadata":{},"sourceType":"module"}